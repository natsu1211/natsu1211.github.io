<?xml version="1.0" encoding="UTF-8"?>
<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">


    
  <url>
    <loc>https://natsu1211.com/modern-cpp-24.html</loc>
    <lastmod>2019-03-20T16:17:10.528Z</lastmod>
    <data>
        <display>
        <title>读薄Effective Modern C++（条款24 区分通用引用和右值引用）</title>
        <pubTime>2019-02-20T18:23:33.000Z</pubTime>
        
        <tag>C++</tag>
         
        <tag>Universal reference</tag>
         
        <tag>Rvalue reference</tag>
         
         
           
             
              <breadCrumb title="PL" url="https://natsu1211.com/categories/PL/"/>
          
             
              <breadCrumb title="Tips" url="https://natsu1211.com/categories/PL/Tips/"/>
          
             
              <breadCrumb title="Memo" url="https://natsu1211.com/categories/Memo/"/>
          
        </display>
    </data>
    </url>

    
  <url>
    <loc>https://natsu1211.com/modern-cpp-11.html</loc>
    <lastmod>2019-02-24T13:24:03.667Z</lastmod>
    <data>
        <display>
        <title>读薄Effective Modern C++ (条款11 优先使用delete关键字删除函数而不是不实现的私有函数)</title>
        <pubTime>2018-10-31T15:22:48.000Z</pubTime>
        
        <tag>C++</tag>
         
        <tag>delete</tag>
         
         
           
             
              <breadCrumb title="PL" url="https://natsu1211.com/categories/PL/"/>
          
             
              <breadCrumb title="Tips" url="https://natsu1211.com/categories/PL/Tips/"/>
          
             
              <breadCrumb title="Memo" url="https://natsu1211.com/categories/Memo/"/>
          
        </display>
    </data>
    </url>

    
  <url>
    <loc>https://natsu1211.com/modern-cpp-23.html</loc>
    <lastmod>2019-02-20T18:24:04.398Z</lastmod>
    <data>
        <display>
        <title>读薄Effective Modern C++ (条款23 理解std::move和std::forward)</title>
        <pubTime>2019-02-18T14:33:41.000Z</pubTime>
        
        <tag>C++</tag>
         
        <tag>Move semantic</tag>
         
        <tag>Value category</tag>
         
        <tag>Rvalue</tag>
         
         
           
             
              <breadCrumb title="PL" url="https://natsu1211.com/categories/PL/"/>
          
             
              <breadCrumb title="Tips" url="https://natsu1211.com/categories/PL/Tips/"/>
          
             
              <breadCrumb title="Memo" url="https://natsu1211.com/categories/Memo/"/>
          
        </display>
    </data>
    </url>

    
  <url>
    <loc>https://natsu1211.com/modern-cpp-22.html</loc>
    <lastmod>2019-02-11T16:42:51.510Z</lastmod>
    <data>
        <display>
        <title>读薄Effective Modern C++ (条款22 当使用Pimpl Idiom时，在实现文件中定义特殊成员函数)</title>
        <pubTime>2019-02-11T09:29:38.000Z</pubTime>
        
        <tag>C++</tag>
         
        <tag>Smart pointer</tag>
         
         
           
             
              <breadCrumb title="PL" url="https://natsu1211.com/categories/PL/"/>
          
             
              <breadCrumb title="Tips" url="https://natsu1211.com/categories/PL/Tips/"/>
          
             
              <breadCrumb title="Memo" url="https://natsu1211.com/categories/Memo/"/>
          
        </display>
    </data>
    </url>

    
  <url>
    <loc>https://natsu1211.com/modern-cpp-21.html</loc>
    <lastmod>2019-02-11T10:10:52.931Z</lastmod>
    <data>
        <display>
        <title>读薄Effective Modern C++ (条款21 比起new，更倾向于使用std::make_unique和std::make_shared)</title>
        <pubTime>2019-02-11T04:56:25.000Z</pubTime>
        
        <tag>C++</tag>
         
        <tag>Smart pointer</tag>
         
         
           
             
              <breadCrumb title="PL" url="https://natsu1211.com/categories/PL/"/>
          
             
              <breadCrumb title="Tips" url="https://natsu1211.com/categories/PL/Tips/"/>
          
             
              <breadCrumb title="Memo" url="https://natsu1211.com/categories/Memo/"/>
          
        </display>
    </data>
    </url>

    
  <url>
    <loc>https://natsu1211.com/modern-cpp-20.html</loc>
    <lastmod>2019-02-11T10:10:47.844Z</lastmod>
    <data>
        <display>
        <title>读薄Effective Modern C++ (条款20 用std::shared_ptr管理共享所有权的资源)</title>
        <pubTime>2019-02-02T08:55:24.000Z</pubTime>
        
        <tag>C++</tag>
         
        <tag>Smart pointer</tag>
         
         
           
             
              <breadCrumb title="PL" url="https://natsu1211.com/categories/PL/"/>
          
             
              <breadCrumb title="Tips" url="https://natsu1211.com/categories/PL/Tips/"/>
          
             
              <breadCrumb title="Memo" url="https://natsu1211.com/categories/Memo/"/>
          
        </display>
    </data>
    </url>

    
  <url>
    <loc>https://natsu1211.com/modern-cpp-19.html</loc>
    <lastmod>2019-02-11T10:10:39.282Z</lastmod>
    <data>
        <display>
        <title>读薄Effective Modern C++ (条款19 用std::shared_ptr管理共享所有权的资源)</title>
        <pubTime>2019-01-26T16:03:55.000Z</pubTime>
        
        <tag>C++</tag>
         
        <tag>Smart pointer</tag>
         
         
           
             
              <breadCrumb title="PL" url="https://natsu1211.com/categories/PL/"/>
          
             
              <breadCrumb title="Tips" url="https://natsu1211.com/categories/PL/Tips/"/>
          
             
              <breadCrumb title="Memo" url="https://natsu1211.com/categories/Memo/"/>
          
        </display>
    </data>
    </url>

    
  <url>
    <loc>https://natsu1211.com/modern-cpp-18.html</loc>
    <lastmod>2019-02-11T10:10:33.660Z</lastmod>
    <data>
        <display>
        <title>读薄Effective Modern C++ (条款18 用std::unique_ptr管理独占所有权的资源)</title>
        <pubTime>2019-01-15T17:19:57.000Z</pubTime>
        
        <tag>C++</tag>
         
        <tag>Smart pointer</tag>
         
         
           
             
              <breadCrumb title="PL" url="https://natsu1211.com/categories/PL/"/>
          
             
              <breadCrumb title="Tips" url="https://natsu1211.com/categories/PL/Tips/"/>
          
             
              <breadCrumb title="Memo" url="https://natsu1211.com/categories/Memo/"/>
          
        </display>
    </data>
    </url>

    
  <url>
    <loc>https://natsu1211.com/modern-cpp-17.html</loc>
    <lastmod>2019-02-11T10:10:27.797Z</lastmod>
    <data>
        <display>
        <title>读薄Effective Modern C++ (条款17 理解特殊成员函数的生成)</title>
        <pubTime>2019-01-12T09:31:53.000Z</pubTime>
        
        <tag>C++</tag>
         
        <tag>Special members</tag>
         
         
           
             
              <breadCrumb title="PL" url="https://natsu1211.com/categories/PL/"/>
          
             
              <breadCrumb title="Tips" url="https://natsu1211.com/categories/PL/Tips/"/>
          
             
              <breadCrumb title="Memo" url="https://natsu1211.com/categories/Memo/"/>
          
        </display>
    </data>
    </url>

    
  <url>
    <loc>https://natsu1211.com/modern_cpp-1.html</loc>
    <lastmod>2019-02-11T10:10:08.878Z</lastmod>
    <data>
        <display>
        <title>读薄Effective Modern C++ (条款1 理解模板类型推导)</title>
        <pubTime>2018-08-23T16:27:34.000Z</pubTime>
        
        <tag>C++</tag>
         
        <tag>Type inference</tag>
         
         
           
             
              <breadCrumb title="PL" url="https://natsu1211.com/categories/PL/"/>
          
             
              <breadCrumb title="Tips" url="https://natsu1211.com/categories/PL/Tips/"/>
          
             
              <breadCrumb title="Memo" url="https://natsu1211.com/categories/Memo/"/>
          
        </display>
    </data>
    </url>

    
  <url>
    <loc>https://natsu1211.com/modern-cpp-6.html</loc>
    <lastmod>2019-02-11T10:10:07.178Z</lastmod>
    <data>
        <display>
        <title>读薄Effective Modern C++ (条款6 当auto推导出非预期类型时应当使用显式的类型初始化)</title>
        <pubTime>2018-10-21T08:59:29.000Z</pubTime>
        
        <tag>C++</tag>
         
        <tag>Type inference</tag>
         
         
           
             
              <breadCrumb title="PL" url="https://natsu1211.com/categories/PL/"/>
          
             
              <breadCrumb title="Tips" url="https://natsu1211.com/categories/PL/Tips/"/>
          
             
              <breadCrumb title="Memo" url="https://natsu1211.com/categories/Memo/"/>
          
        </display>
    </data>
    </url>

    
  <url>
    <loc>https://natsu1211.com/modern-cpp-5.html</loc>
    <lastmod>2019-02-11T10:10:00.955Z</lastmod>
    <data>
        <display>
        <title>读薄Effective Modern C++ (条款5 优先使用auto而非显式类型声明)</title>
        <pubTime>2018-10-20T10:37:28.000Z</pubTime>
        
        <tag>C++</tag>
         
        <tag>Type inference</tag>
         
         
           
             
              <breadCrumb title="PL" url="https://natsu1211.com/categories/PL/"/>
          
             
              <breadCrumb title="Tips" url="https://natsu1211.com/categories/PL/Tips/"/>
          
             
              <breadCrumb title="Memo" url="https://natsu1211.com/categories/Memo/"/>
          
        </display>
    </data>
    </url>

    
  <url>
    <loc>https://natsu1211.com/modern-cpp-4.html</loc>
    <lastmod>2019-02-11T10:10:00.130Z</lastmod>
    <data>
        <display>
        <title>读薄Effective Modern C++ (条款4 知道如何查看类型推导)</title>
        <pubTime>2018-10-20T08:46:42.000Z</pubTime>
        
        <tag>C++</tag>
         
        <tag>Type inference</tag>
         
         
           
             
              <breadCrumb title="PL" url="https://natsu1211.com/categories/PL/"/>
          
             
              <breadCrumb title="Tips" url="https://natsu1211.com/categories/PL/Tips/"/>
          
             
              <breadCrumb title="Memo" url="https://natsu1211.com/categories/Memo/"/>
          
        </display>
    </data>
    </url>

    
  <url>
    <loc>https://natsu1211.com/modern-cpp-2.html</loc>
    <lastmod>2019-02-11T10:09:58.874Z</lastmod>
    <data>
        <display>
        <title>读薄Effective Modern C++ (条款2 理解auto类型推导)</title>
        <pubTime>2018-08-28T16:07:46.000Z</pubTime>
        
        <tag>C++</tag>
         
        <tag>Type inference</tag>
         
         
           
             
              <breadCrumb title="PL" url="https://natsu1211.com/categories/PL/"/>
          
             
              <breadCrumb title="Tips" url="https://natsu1211.com/categories/PL/Tips/"/>
          
             
              <breadCrumb title="Memo" url="https://natsu1211.com/categories/Memo/"/>
          
        </display>
    </data>
    </url>

    
  <url>
    <loc>https://natsu1211.com/modern-cpp-3.html</loc>
    <lastmod>2019-02-11T10:09:56.255Z</lastmod>
    <data>
        <display>
        <title>读薄Effective Modern C++ (条款3 理解decltype)</title>
        <pubTime>2018-10-18T15:33:48.000Z</pubTime>
        
        <tag>C++</tag>
         
        <tag>Type inference</tag>
         
         
           
             
              <breadCrumb title="PL" url="https://natsu1211.com/categories/PL/"/>
          
             
              <breadCrumb title="Tips" url="https://natsu1211.com/categories/PL/Tips/"/>
          
             
              <breadCrumb title="Memo" url="https://natsu1211.com/categories/Memo/"/>
          
        </display>
    </data>
    </url>

    
  <url>
    <loc>https://natsu1211.com/modern-cpp-14.html</loc>
    <lastmod>2019-02-11T10:01:45.863Z</lastmod>
    <data>
        <display>
        <title>读薄Effective Modern C++ (条款14 使用noexcept修饰不抛出异常的函数)</title>
        <pubTime>2018-12-01T09:49:51.000Z</pubTime>
        
        <tag>C++</tag>
         
        <tag>noexcept</tag>
         
         
           
             
              <breadCrumb title="PL" url="https://natsu1211.com/categories/PL/"/>
          
             
              <breadCrumb title="Tips" url="https://natsu1211.com/categories/PL/Tips/"/>
          
             
              <breadCrumb title="Memo" url="https://natsu1211.com/categories/Memo/"/>
          
        </display>
    </data>
    </url>

    
  <url>
    <loc>https://natsu1211.com/modern-cpp-15.html</loc>
    <lastmod>2019-02-11T10:01:44.744Z</lastmod>
    <data>
        <display>
        <title>读薄Effective Modern C++ (条款15 尽可能的使用constexpr)</title>
        <pubTime>2019-01-06T12:47:15.000Z</pubTime>
        
        <tag>C++</tag>
         
        <tag>constexpr</tag>
         
         
           
             
              <breadCrumb title="PL" url="https://natsu1211.com/categories/PL/"/>
          
             
              <breadCrumb title="Tips" url="https://natsu1211.com/categories/PL/Tips/"/>
          
             
              <breadCrumb title="Memo" url="https://natsu1211.com/categories/Memo/"/>
          
        </display>
    </data>
    </url>

    
  <url>
    <loc>https://natsu1211.com/modern-cpp-16.html</loc>
    <lastmod>2019-02-11T10:01:43.382Z</lastmod>
    <data>
        <display>
        <title>读薄Effective Modern C++ (条款16 使const成员函数成为线程安全函数)</title>
        <pubTime>2019-01-10T17:04:44.000Z</pubTime>
        
        <tag>C++</tag>
         
        <tag>thread safety</tag>
         
         
           
             
              <breadCrumb title="PL" url="https://natsu1211.com/categories/PL/"/>
          
             
              <breadCrumb title="Tips" url="https://natsu1211.com/categories/PL/Tips/"/>
          
             
              <breadCrumb title="Memo" url="https://natsu1211.com/categories/Memo/"/>
          
        </display>
    </data>
    </url>

    
  <url>
    <loc>https://natsu1211.com/modern-cpp-13.html</loc>
    <lastmod>2019-02-11T09:59:03.504Z</lastmod>
    <data>
        <display>
        <title>读薄Effective Modern C++ (条款13 优先使用const_iterator而不是iterator)</title>
        <pubTime>2018-11-20T15:21:26.000Z</pubTime>
        
        <tag>C++</tag>
         
        <tag>iterator</tag>
         
         
           
             
              <breadCrumb title="PL" url="https://natsu1211.com/categories/PL/"/>
          
             
              <breadCrumb title="Tips" url="https://natsu1211.com/categories/PL/Tips/"/>
          
             
              <breadCrumb title="Memo" url="https://natsu1211.com/categories/Memo/"/>
          
        </display>
    </data>
    </url>

    
  <url>
    <loc>https://natsu1211.com/modern-cpp-12.html</loc>
    <lastmod>2019-02-11T09:57:49.416Z</lastmod>
    <data>
        <display>
        <title>读薄Effective Modern C++ (条款12 将覆盖函数(overriding function)声明为override)</title>
        <pubTime>2018-11-04T14:17:23.000Z</pubTime>
        
        <tag>C++</tag>
         
        <tag>override</tag>
         
         
           
             
              <breadCrumb title="PL" url="https://natsu1211.com/categories/PL/"/>
          
             
              <breadCrumb title="Tips" url="https://natsu1211.com/categories/PL/Tips/"/>
          
             
              <breadCrumb title="Memo" url="https://natsu1211.com/categories/Memo/"/>
          
        </display>
    </data>
    </url>

    
  <url>
    <loc>https://natsu1211.com/modern-cpp-10.html</loc>
    <lastmod>2019-02-11T09:56:53.095Z</lastmod>
    <data>
        <display>
        <title>读薄Effective Modern C++ (条款10 优先使用有作用域的enum而不是无作用域的enum)</title>
        <pubTime>2018-10-27T17:18:56.000Z</pubTime>
        
        <tag>C++</tag>
         
        <tag>type alias</tag>
         
         
           
             
              <breadCrumb title="PL" url="https://natsu1211.com/categories/PL/"/>
          
             
              <breadCrumb title="Tips" url="https://natsu1211.com/categories/PL/Tips/"/>
          
             
              <breadCrumb title="Memo" url="https://natsu1211.com/categories/Memo/"/>
          
        </display>
    </data>
    </url>

    
  <url>
    <loc>https://natsu1211.com/modern-cpp-9.html</loc>
    <lastmod>2019-02-11T09:51:02.932Z</lastmod>
    <data>
        <display>
        <title>读薄Effective Modern C++ (条款9 优先使用别名声明而不是typedef)</title>
        <pubTime>2018-10-27T07:15:51.000Z</pubTime>
        
        <tag>C++</tag>
         
        <tag>type alias</tag>
         
         
           
             
              <breadCrumb title="PL" url="https://natsu1211.com/categories/PL/"/>
          
             
              <breadCrumb title="Tips" url="https://natsu1211.com/categories/PL/Tips/"/>
          
             
              <breadCrumb title="Memo" url="https://natsu1211.com/categories/Memo/"/>
          
        </display>
    </data>
    </url>

    
  <url>
    <loc>https://natsu1211.com/modern-cpp-8.html</loc>
    <lastmod>2019-02-11T09:51:02.195Z</lastmod>
    <data>
        <display>
        <title>读薄Effective Modern C++ (条款8 优先使用nullptr而不是0和NULL)</title>
        <pubTime>2018-10-26T15:35:12.000Z</pubTime>
        
        <tag>C++</tag>
         
        <tag>nullptr</tag>
         
         
           
             
              <breadCrumb title="PL" url="https://natsu1211.com/categories/PL/"/>
          
             
              <breadCrumb title="Tips" url="https://natsu1211.com/categories/PL/Tips/"/>
          
             
              <breadCrumb title="Memo" url="https://natsu1211.com/categories/Memo/"/>
          
        </display>
    </data>
    </url>

    
  <url>
    <loc>https://natsu1211.com/modern-cpp-7.html</loc>
    <lastmod>2019-02-11T09:51:01.367Z</lastmod>
    <data>
        <display>
        <title>读薄Effective Modern C++ (条款7 区分()与{}初始化)</title>
        <pubTime>2018-10-21T10:57:37.000Z</pubTime>
        
        <tag>C++</tag>
         
        <tag>initializer_list</tag>
         
         
           
             
              <breadCrumb title="PL" url="https://natsu1211.com/categories/PL/"/>
          
             
              <breadCrumb title="Tips" url="https://natsu1211.com/categories/PL/Tips/"/>
          
             
              <breadCrumb title="Memo" url="https://natsu1211.com/categories/Memo/"/>
          
        </display>
    </data>
    </url>

    
    
</urlset>